{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonam\\\\OneDrive\\\\Desktop\\\\Saransh Portfolio\\\\client\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing session on app load\n    const checkAuth = async () => {\n      const adminToken = localStorage.getItem('adminToken');\n      const userToken = localStorage.getItem('userToken');\n      if (adminToken) {\n        // Admin session exists\n        setUser({\n          id: 'admin-1',\n          email: 'admin@portfolio.com',\n          role: 'developer',\n          name: 'Developer'\n        });\n      } else if (userToken) {\n        // User session exists\n        const userData = localStorage.getItem('userData');\n        if (userData) {\n          setUser(JSON.parse(userData));\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // For demo purposes, accept any valid email/password\n      if (email && password.length >= 6) {\n        const userData = {\n          id: 'user-1',\n          email,\n          role: 'user',\n          name: email.split('@')[0]\n        };\n        setUser(userData);\n        localStorage.setItem('userToken', 'user-session-token');\n        localStorage.setItem('userData', JSON.stringify(userData));\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const adminLogin = async (email, password, adminKey) => {\n    try {\n      setLoading(true);\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // For demo purposes, check admin key\n      if (email && password.length >= 8 && adminKey === 'developer2024') {\n        const userData = {\n          id: 'admin-1',\n          email,\n          role: 'developer',\n          name: 'Developer'\n        };\n        setUser(userData);\n        localStorage.setItem('adminToken', 'admin-session-token');\n        localStorage.setItem('adminRole', 'developer');\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Admin login error:', error);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signup = async userData => {\n    try {\n      setLoading(true);\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // For demo purposes, create user account\n      const newUser = {\n        id: 'user-' + Date.now(),\n        email: userData.email,\n        role: 'user',\n        name: `${userData.firstName} ${userData.lastName}`\n      };\n      setUser(newUser);\n      localStorage.setItem('userToken', 'user-session-token');\n      localStorage.setItem('userData', JSON.stringify(newUser));\n      return true;\n    } catch (error) {\n      console.error('Signup error:', error);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('userData');\n    localStorage.removeItem('adminRole');\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isDeveloper: (user === null || user === void 0 ? void 0 : user.role) === 'developer',\n    login,\n    adminLogin,\n    signup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuth","adminToken","localStorage","getItem","userToken","id","email","role","name","userData","JSON","parse","login","password","Promise","resolve","setTimeout","length","split","setItem","stringify","error","console","adminLogin","adminKey","signup","newUser","Date","now","firstName","lastName","logout","removeItem","value","isAuthenticated","isDeveloper","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonam/OneDrive/Desktop/Saransh Portfolio/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  role: 'user' | 'developer';\r\n  name?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isDeveloper: boolean;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  adminLogin: (email: string, password: string, adminKey: string) => Promise<boolean>;\r\n  signup: (userData: { firstName: string; lastName: string; email: string; password: string }) => Promise<boolean>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for existing session on app load\r\n    const checkAuth = async () => {\r\n      const adminToken = localStorage.getItem('adminToken');\r\n      const userToken = localStorage.getItem('userToken');\r\n      \r\n      if (adminToken) {\r\n        // Admin session exists\r\n        setUser({\r\n          id: 'admin-1',\r\n          email: 'admin@portfolio.com',\r\n          role: 'developer',\r\n          name: 'Developer'\r\n        });\r\n      } else if (userToken) {\r\n        // User session exists\r\n        const userData = localStorage.getItem('userData');\r\n        if (userData) {\r\n          setUser(JSON.parse(userData));\r\n        }\r\n      }\r\n      \r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // For demo purposes, accept any valid email/password\r\n      if (email && password.length >= 6) {\r\n        const userData: User = {\r\n          id: 'user-1',\r\n          email,\r\n          role: 'user',\r\n          name: email.split('@')[0]\r\n        };\r\n        \r\n        setUser(userData);\r\n        localStorage.setItem('userToken', 'user-session-token');\r\n        localStorage.setItem('userData', JSON.stringify(userData));\r\n        \r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const adminLogin = async (email: string, password: string, adminKey: string): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // For demo purposes, check admin key\r\n      if (email && password.length >= 8 && adminKey === 'developer2024') {\r\n        const userData: User = {\r\n          id: 'admin-1',\r\n          email,\r\n          role: 'developer',\r\n          name: 'Developer'\r\n        };\r\n        \r\n        setUser(userData);\r\n        localStorage.setItem('adminToken', 'admin-session-token');\r\n        localStorage.setItem('adminRole', 'developer');\r\n        \r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    } catch (error) {\r\n      console.error('Admin login error:', error);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const signup = async (userData: { firstName: string; lastName: string; email: string; password: string }): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      // For demo purposes, create user account\r\n      const newUser: User = {\r\n        id: 'user-' + Date.now(),\r\n        email: userData.email,\r\n        role: 'user',\r\n        name: `${userData.firstName} ${userData.lastName}`\r\n      };\r\n      \r\n      setUser(newUser);\r\n      localStorage.setItem('userToken', 'user-session-token');\r\n      localStorage.setItem('userData', JSON.stringify(newUser));\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('userToken');\r\n    localStorage.removeItem('adminToken');\r\n    localStorage.removeItem('userData');\r\n    localStorage.removeItem('adminRole');\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isDeveloper: user?.role === 'developer',\r\n    login,\r\n    adminLogin,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}